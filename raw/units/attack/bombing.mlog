constants:
    import author
    import default_mul_bind_constants
    set unit_amount 3

flag_def:
    import flag_def

binding:
    leader:
        import leader

    is_binding_needed:
        op sub timer @time time_between_bind
        jump main_part greaterThan last_time timer

    binding_constants:
        import binding_chose_unit_by_sorter

    unit1:
        unit1_is_binding_needed:
        import unit_check_and_bind(<unit> = 1, <next_unit> = 2)

    unit2:
        unit2_is_binding_needed:
        import unit_check_and_bind(<unit> = 2, <next_unit> = 3)
    
    unit3:
        unit3_is_binding_needed:
        import unit_check_and_bind(<unit> = 3, <next_unit> = 4)

    unit4:
        unit4_is_binding_needed:
        import unit_check_and_bind(<unit> = 4, <next_unit> = 5)

    unit5:
        unit5_is_binding_needed:
        import unit_check_and_bind(<unit> = 5, <next_unit> = 6)

    unit6:
        unit6_is_binding_needed:
        import unit_check_and_bind(<unit> = 6, <next_unit> = 7)

    unit7:
        unit7_is_binding_needed:
        import unit_check_and_bind(<unit> = 7, <next_unit> = 8)

    unit8:
        unit8_is_binding_needed:
        import last_unit_check_and_bind(<unit> = 8)
    
    free_up_binded_unit:
        free_1_8:
           import free_up_unit(<unit> = 1)

        free_2_8:
           import free_up_unit(<unit> = 2)

        free_3_8:
           import free_up_unit(<unit> = 3)

        free_4_8:
           import free_up_unit(<unit> = 4)
           
        free_5_8:
           import free_up_unit(<unit> = 5)
           
        free_6_8:
           import free_up_unit(<unit> = 6)
           
        free_7_8:
           import free_up_unit(<unit> = 7)
           
        free_8_8:
           import free_up_unit(<unit> = 8)

    binding_end:
        set last_time @time
        jump main_part always

main_part:
    sensor item sorter3 @config
    sensor attack leader item
    "sensor attack switch1 @enabled"

    set_attack_position:
        sensor ready_to_set sorter2 @config
        jump set_leader_position equal ready_to_set false
        sensor shooting leader @shooting
        sensor target_x leader @shootX
        sensor target_y leader @shootY
        jump set_leader_position equal shooting 0
        control configure sorter2 0 0 0 0

    set_leader_position:
        import set_leader_position

    unit1_control:
        ubind unit1
        ulocate building core false i_love_you corex corey coref core

        check_is_have_item:
            sensor item_in_unit @unit item
            jump main_task1 greaterThanEq item_in_unit 20

        take_item_from_core:
            ucontrol move corex corey
            ucontrol itemTake core item 999
            ucontrol itemDrop core 999
            jump unit1_end always

        main_task1:
            jump unit1_attack notEqual attack false

            rally:
                ucontrol approach @thisx @thisy 10
                set unit1_sended_time false
                jump unit1_end always

            unit1_attack:
                is_targex_exists:
                    jump attack1 notEqual target_x 0
                    ulocate building core true i_love_you target_x target_y target_f target

                attack1:
                    ucontrol move target_x target_y
                    ucontrol target target_x target_y 1
                    jump unit1_end notEqual unit1_sended_time false
                    set unit1_sended_time @time    

        unit1_end:
 
    unit2_control:
        ubind unit2
        ulocate building core false i_love_you corex corey coref core

        check_is_have_item:
            sensor item_in_unit @unit item
            jump main_task2 greaterThanEq item_in_unit 20

        take_item_from_core:
            ucontrol move corex corey
            ucontrol itemTake core item 999
            ucontrol itemDrop core 999
            jump unit2_end always

        main_task2:
            jump unit2_attack notEqual attack false

            rally:
                ucontrol approach @thisx @thisy 10
                jump unit2_end always

            unit2_attack:
                op sub timer @time unit1_sended_time
                jump unit2_end lessThan timer 300
                set unit2_sended_time @time
                ucontrol move target_x target_y
                ucontrol target target_x target_y 1          

        unit2_end:

    unit3_control:
        ubind unit3
        ulocate building core false i_love_you corex corey coref core

        check_is_have_item:
            sensor item_in_unit @unit item
            jump main_task3 greaterThanEq item_in_unit 20

        take_item_from_core:
            ucontrol move corex corey
            ucontrol itemTake core item 999
            ucontrol itemDrop core 999
            jump unit3_end always

        main_task3:
            jump unit3_attack notEqual attack false

            rally:
                ucontrol approach @thisx @thisy 10
                jump unit3_end always

            unit3_attack:
                op sub timer @time unit1_sended_time
                jump unit3_end lessThan timer 600
                set unit3_sended_time @time
                ucontrol move target_x target_y
                ucontrol target target_x target_y 1          

        unit3_end:

    main_part_end:
        jump binding always
